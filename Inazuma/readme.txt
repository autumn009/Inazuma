Inazuma Procedural Text Editor
==============================
Version 1.0.0.1
2021年6月19日
川俣 晶 (autumn)

　【これが超次元エディタだ!】

● 概要
　grepなどのコマンドライン・ツールを用いてテキストを編集するための、手続き型のテキストエディタ(Procedural Text Editor)です。
　通常の手動編集を前提としたエディタとは全く次元の異なる超次元エディタです。従来型エディタの機能補完用です。

● 機能
　テキストボックスの内容を標準入力とし、任意のコマンドを実行し、標準出力/エラー出力の内容を別のテキストボックスに書き出します。
　入出力データをファイルに書き込むことなく、コマンドラインツールを実行できます。
　grepやsort|uniqをGUIツールと連携するために作成されています。
　(grepなどは付属しません)
　ファイルへの入出力の機能は持っていません。クリップボード経由でテキストを受け取り、クリップボード経由で結果を取り出します。

● 動作環境
Windows 10/.NET 5
(Windows以外では動作しません)

● 基本的な使い方
　メインウィンドウのCommandのテキストボックスに実行する行を入力します。(作業ディレクトリのファイル一覧を得るなら"dir")
　実行する行は、標準入力から入力し(オプション)、標準出力に出力する必要があります。
　使用するエンコーディングはUTF-8がデフォルトですが、もしレガシーなエンコーディング(シフトJISなど)しか使えないツールを起動する場合は"DEF ENC"にチェックを入れます。
　上側の複数行のテキストボックスに入力テキストを入力し、RUNボタンを押します。すると、下側の複数行のテキストボックスに結果が表示されます。
　もし、上側の複数行のテキストボックスが空の場合は実行に先立ってクリップボードから貼り付けを行います。

● 使用方法・メインウィンドウ
Macro　定義済みのマクロを選択します。選択されたマクロの内容は、Command欄とDEF ENC欄に入ります。
Command　実行する行を入力します
DEF ENC　システムデフォルトのレガシーエンコーディング(日本ならシフトJIS/CP932)で実行する場合はチェックを入れます。チェックを入れない場合はUTF-8/CP 65001で実行されます)
Edit Macro 定義済みのマクロを編集します。定義済みマクロはこの機能を使わない限り変更されません。(つまり、Command欄は好きなように書き換えても影響は残りません)
Working Dir ワーキングディレクトリ(カレントディレクトリ)を変更します。
Paste Source　上側の複数行のテキストボックスにクリップボードのテキストを貼り付けます
Run↓　コマンドを実行します　(Enterキーを押してもこのボタンが機能します)
Copy Result　下側の複数行のテキストボックスに入っているテキストをクリップボードにコピーします。

● 使用方法・マクロ編集ウィンドウ
Macros 修正するマクロを選択します
Name マクロの名前を入力します
Command 実行するコマンドラインを入力します
Use System Default Legacy Encoding　システムデフォルトのレガシーエンコーディング(日本ならシフトJIS/CP932)を使用する場合はチェックします
Add New Entry　新しいマクロを追加します
Remove Entry　選択されたマクロを削除します
OK　修正を反映してダイアログボックスを閉じます
Cancel　修正を破棄してダイアログボックスを閉じます

● 定義済みマクロの解説
　マクロの定義が存在しない時、以下のマクロが自動的に定義されます。

grep, grepを実行します。SEARCH TEXTまたはスクリプト全体を書き換えて使用します。
sed, sedを実行します。SEARCH_FOR/REPlACE_WITHまたはスクリプト全体を書き換えて使用します。
awk, awkを実行します。SEARCH_FORまたはスクリプト全体を書き換えて使用します。
sort|uniq, sort|uniqを実行します。
Current Directory, CDを実行します。
File Association, ASSOCを実行します。
Command Search Path, PATHを実行します。
List Env Var, SETを実行します。
SORT, SORTを実行します。
System Info, SYSTEMINFOを実行します。
Task List, TASKLISTを実行します。
Directory, Tree TREEを実行します。
Windows Version, VERを実行します。
Volume Name, VOLを実行します。
Find String, FIND "SEARCH TEXT"を実行します。SEARCH TEXTまたはスクリプト全体を書き換えて使用します。
Welcome, echo Welcome to Inazuma Procedural Text Editor, please re-write this command to learn how to use.");

注:　uniq/grep/sed/awkは付属しません。お好みのものをお使い下さい。他のツールはWindows標準付属です。

● マクロの設定ファイルのパス
C:\Users\(user name)\AppData\Roaming\Pie Dey\Inazuma\macros.xml

● 実装上の制約
　cmd.exe実行時にレジストリを書き換えてデフォルトのコードページを変更しています。変更中に手動でcmd.exeを実行すると通常のデフォルト以外のコードページでcmd.exeが起動します。また本ソフトが強制中断されるとレジストリに一時的な値が残る可能性があります。
　変更するレジストリは、HKEY_CURRENT_USERの"Console\%SystemRoot%_system32_cmd.exe"のCodePageサブキーの値です。
　また、構造上、標準入力にリダイレクトされないキー入力待ちのあるコマンドを実行するとハングします。
　入出力のテキストボックスの容量の制約からあまり大きなデータは扱えません。

● ソースコード
　ソースコードはgithubで全て公開されています。
https://github.com/autumn009/Inazuma

● サポート
Twitter @KawamataAkira
Facebook autumn009
電子メール autumn@piedey.co.jp
川俣晶宛にお問い合わせ下さい

● ライセンス
MIT License (Open Source)

● 解説
　私は、8bit時代はそれなりに便利なエディタを開発して使用したことがあります。そのため、かなり昔からもっと高度なテキストエディタの開発を考えていました。しかし、Windows時代に入ったときに【秀丸】の存在を知って、エディタの市場を食い合うのも得策ではないと考えてエディタの開発は先送りしました。しかし、そろそろ書いても良いかなと思っていました。しかし、手間は非常に大きなものになります。本エディタは、本来構想されたシェル機能を含む完全なテキストエディタの構想のうち、シェル機能だけを先行して実装したものです。理由は簡単で、理想のシェル機能以外は特に他のツールで用が足りたからです。実は仕事上sort|uniqを実行する回数が割と多くなったものの、いちいちコマンドプロンプトを開く手間が面倒になってInazumaを作成しました。つまりは自分のためです。開発途中の版は確実に役立っていました。つまり、Inazumaはイナズマンというよりもまだ未完成のサナギマンです。

● 改訂履歴
1.0.0.1　2021年6月19日　最初のリリース

以上
